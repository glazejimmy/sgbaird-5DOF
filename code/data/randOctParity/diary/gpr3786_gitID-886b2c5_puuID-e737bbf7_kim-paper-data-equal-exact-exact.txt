datatype = kim
<a href="matlab: opentoline('C:\Users\sterg\Documents\GitHub\infer\code\interp\code\interp5DOF_setup.m',91,1)">91  </a>        five = struct('q',q(id1,:),'nA',nA(id1,:));
size([find(id1);find(id2)])

ans =

       67886           1

group = [zeros(nspec,1);ones(nspec,1)];
        c = cvpartition(group,'Holdout',floor(0.2*(nspec+nmech)));
        id1 = training(c);
        id2 = test(c);
        %add the leftover mechIDs to test set
        extraIDs = setdiff((1:npts).',[find(id1);find(id2)]);
size([find(id1);find(id2)])

ans =

        4732           1

size(extraIDs)

ans =

       63154           1

size(id2)

ans =

        4732           1

group = [zeros(nspec,1);ones(nspec,1)];
        c = cvpartition(group,'Holdout',floor(0.2*(nspec+nmech)));
        id1 = training(c);
        id2 = test(c);
        %add the leftover mechIDs to test set
        extraIDs = (1:npts).' == [find(id1);find(id2)]);
         extraIDs = (1:npts).' == [find(id1);find(id2)]);
                                                       â†‘
{Error: Invalid expression. When calling a function or indexing a variable, use parentheses. Otherwise, check for
mismatched delimiters.
} 
group = [zeros(nspec,1);ones(nspec,1)];
        c = cvpartition(group,'Holdout',floor(0.2*(nspec+nmech)));
        id1 = training(c);
        id2 = test(c);
        %add the leftover mechIDs to test set
        extraIDs = (1:npts).' == [find(id1);find(id2)];
{Matrix dimensions must agree.
} 
group = [zeros(nspec,1);ones(nspec,1)];
        c = cvpartition(group,'Holdout',floor(0.2*(nspec+nmech)));
        id1 = training(c);
        id2 = test(c);
        %add the leftover mechIDs to test set
        extraIDs = ismember((1:npts).',[find(id1);find(id2)]);
size(extraIDs)

ans =

       67886           1

group = [zeros(nspec,1);ones(nspec,1)];
        c = cvpartition(group,'Holdout',floor(0.2*(nspec+nmech)));
        id1 = training(c);
        id2 = test(c);
        %add the leftover mechIDs to test set
        extraIDs = ismember((1:npts).',[find(id1);find(id2)]);
        id2 = [id2;extraIDs(nspec+nmech+1:end)];
size(id2)

ans =

       67886           1

nnz(id2)

ans =

   946

group = [zeros(nspec,1);ones(nspec,1)];
        c = cvpartition(group,'Holdout',floor(0.2*(nspec+nmech)));
        id1 = training(c);
        id2 = test(c);
        %add the leftover mechIDs to test set
        extraIDs = ~ismember((1:npts).',[find(id1);find(id2)]);
        id2 = [id2;extraIDs(nspec+nmech+1:end)];
nnz(id2)

ans =

       64100

nnz(id1)

ans =

        3786

64100+3786

ans =

       67886

if system_dependent('IsDebugMode')==1, dbquit all; end
randOctParityData
env = local
dryrunQ = 0
savecatQ = 1
metaQ = 0
default comment: kim-paper-data-equal-exact-exact. Continue (y) or override (n)? y
[Warning: Working directory not clean (i.e. uncommitted/unpushed) files exist. Use !git commit -am "<message>", then !git
push] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('get_gitcommit', 'C:\Users\sterg\Documents\GitHub\infer\code\interp\code\MATslurm\code\get_gitcommit.m', 15)" style="font-weight:bold">get_gitcommit</a> (<a href="matlab: opentoline('C:\Users\sterg\Documents\GitHub\infer\code\interp\code\MATslurm\code\get_gitcommit.m',15,0)">line 15</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('writeparfile', 'C:\Users\sterg\Documents\GitHub\infer\code\interp\code\MATslurm\code\writeparfile.m', 124)" style="font-weight:bold">writeparfile</a> (<a href="matlab: opentoline('C:\Users\sterg\Documents\GitHub\infer\code\interp\code\MATslurm\code\writeparfile.m',124,0)">line 124</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('randOctParityData', 'C:\Users\sterg\Documents\GitHub\infer\code\interp\code\randOctParityData.m', 139)" style="font-weight:bold">randOctParityData</a> (<a href="matlab: opentoline('C:\Users\sterg\Documents\GitHub\infer\code\interp\code\randOctParityData.m',139,0)">line 139</a>)] 
max_walltime = 59 minutes
saving parameter file
